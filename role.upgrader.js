// –ò–º–ø–æ—Ä—Ç –º–æ–¥—É–ª–µ–π
const resourceManager = require('resourceManager');

// –§—É–Ω–∫—Ü–∏—è —É–ª—É—á—à–µ–Ω–∏—è –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞
function upgrade(creep, controller) {
  // –ï—Å–ª–∏ –∫—Ä–∏–ø –Ω–µ —Ä—è–¥–æ–º —Å –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–æ–º, –ø–µ—Ä–µ–º–µ—â–∞–µ–º –µ–≥–æ –∫ –Ω–µ–º—É
  if (creep.pos.inRangeTo(controller, 3) == false) {
    creep.moveTo(controller, {visualizePathStyle: {stroke: '#ffffff'}});
    creep.say('üö∂', true);
  } else {
    // –ï—Å–ª–∏ –∫—Ä–∏–ø —Ä—è–¥–æ–º —Å –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–æ–º, —É–ª—É—á—à–∞–µ–º –µ–≥–æ
    creep.upgradeController(controller);
    creep.say('üî®', true);
  }
}

// –§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è
function findUpgradeController(creep) {
  // –ò—â–µ–º –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –≤ –∫–æ–º–Ω–∞—Ç–µ
  let controller = creep.room.controller;
  if (controller && controller.my) {
    // –ï—Å–ª–∏ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –Ω–∞–π–¥–µ–Ω –∏ –æ–Ω –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –∫—Ä–∏–ø—É, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –µ–≥–æ
    return controller;
  } else {
    // –ï—Å–ª–∏ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –æ–Ω –Ω–µ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –∫—Ä–∏–ø—É, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º null
    return null;
  }
}

// –§—É–Ω–∫—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ä–æ–ª–∏
function run(creep) {
  // –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è
  let controller = findUpgradeController(creep);
  // –ï—Å–ª–∏ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –Ω–∞–π–¥–µ–Ω, —É–ª—É—á—à–∞–µ–º –µ–≥–æ
  if (controller) {
    upgrade(creep, controller);
  } else {
    // –ò–Ω–∞—á–µ –¥–æ—Å—Ç–∞–µ–º —Ä–µ—Å—É—Ä—Å—ã –∏–∑ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞
    resourceManager.withdraw(creep, RESOURCE_ENERGY);
    creep.say('üîã', true);
  }
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ä–æ–ª–∏
module.exports = {
  run: run
};