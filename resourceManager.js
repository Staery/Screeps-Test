// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ—Å—Ç–∞–≤–∫–∏ —Ä–µ—Å—É—Ä—Å–æ–≤ –∏–∑ —Ö—Ä–∞–Ω–∏–ª–∏—â
function withdraw(creep, resourceType) {
  // –ò—â–µ–º –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ —Ä–µ—Å—É—Ä—Å–æ–≤
  let targets = creep.room.find(FIND_STRUCTURES, {
    filter: (structure) => {
      return (structure.structureType == STRUCTURE_CONTAINER ||
              structure.structureType == STRUCTURE_STORAGE ||
              structure.structureType == STRUCTURE_TERMINAL) &&
              structure.store.getUsedCapacity(resourceType) > 0;
    }
  });

  if (targets.length > 0) {
    // –ï—Å–ª–∏ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ –Ω–∞–π–¥–µ–Ω—ã, –¥–æ—Å—Ç–∞–µ–º —Ä–µ—Å—É—Ä—Å—ã –∏–∑ –ø–µ—Ä–≤–æ–≥–æ –∏–∑ —Å–ø–∏—Å–∫–∞
    if (creep.withdraw(targets[0], resourceType) == ERR_NOT_IN_RANGE) {
      creep.moveTo(targets[0], {visualizePathStyle: {stroke: '#ffffff'}});
      creep.say('üöö');
    }
  }
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é
module.exports = {
  withdraw: withdraw
};
